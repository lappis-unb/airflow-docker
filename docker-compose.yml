version: '3'
x-airflow-common:
  &airflow-common
  image: registry.gitlab.com/lappis-unb/decidimbr/airflow-docker:latest
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    AIRFLOW__CORE__FERNET_KEY: 'Uqv6pwYWJn7xifR3QAkifMTkupos8mkxaQL2Q7Ydsqw='
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DEFAULT_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_RETRY: 'false'
    AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_FAILURE: 'false'
    AIRFLOW__WEBSERVER__SECRET_KEY: '42'
    AIRFLOW__WEBSERVER__WORKERS: 1
    AIRFLOW__WEBSERVER__NAVBAR_COLOR: "#9580ff"
    PYTHONPATH: '/opt/airflow/dags/airflow-dags'
  volumes:
    - ../airflow-dags/dags:/opt/airflow/dags/airflow-dags

  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./mnt/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      airflow-webserver:
        condition: service_healthy

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./mnt/minio:/data
    environment:
      MINIO_ROOT_USER: lappis
      MINIO_ROOT_PASSWORD: lappisrocks
    command: server --console-address ":9001" /data

  jupyter:
    <<: *airflow-common
    command: bash -c "jupyter lab --port=8888 --no-browser --ip=0.0.0.0 --notebook-dir=/opt/airflow/notebooks --ServerApp.token=''"
    volumes:
      - ./mnt/notebooks:/opt/airflow/notebooks
    ports:
      - 8888:8888