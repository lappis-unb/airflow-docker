version: '3'
x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-registry.gitlab.com/lappis-unb/decidimbr/servicos-de-dados/airflow-dags:latest}
  build:
    context: ..
    dockerfile: airflow-docker/Dockerfile
  environment:
    &airflow-common-env
    AIRFLOW__CORE__DEFAULT_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__CORE__ENABLE_XCOM_PICKLING: 'true'
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__API__AUTH_BACKENDS: airflow.api.auth.backend.basic_auth
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres/${POSTGRES_DB:-airflow}
    AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_RETRY: 'false'
    AIRFLOW__EMAIL__DEFAULT_EMAIL_ON_FAILURE: 'false'
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
    AIRFLOW__WEBSERVER__INSTANCE_NAME: "Dev Env!"
    AIRFLOW__WEBSERVER__NAVBAR_COLOR: '#FFD700'
    AIRFLOW__WEBSERVER__SECRET_KEY: '42'
    PYTHONPATH: '${AIRFLOW_HOME}/dags/airflow-dags'
  volumes:
    # cluster policy config
    - ./config/airflow_local_settings.py:${AIRFLOW_HOME}/config/airflow_local_settings.py
    # dags
    - ../airflow-dags/dags:${AIRFLOW_HOME}/dags/airflow-dags
    # Plugins
    - ../airflow-dags/plugins:${AIRFLOW_HOME}/dags/airflow-dags/plugins
    # logs
    #- ./mnt/logs:${AIRFLOW_HOME}/logs
    # - ./mnt/dags-data:${AIRFLOW_HOME}/dags-data

  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: ${POSTGRES_IMAGE_NAME:-postgres:15}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-airflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-airflow}
      POSTGRES_DB: ${POSTGRES_DB:-airflow}
    volumes:
      - ${DB_VOLUME}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  postgres-dw:
    image: ${POSTGRES_IMAGE_NAME:-postgres:15}
    environment:
      POSTGRES_USER: ${POSTGRES_USER_DW:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DW:-postgres}
      POSTGRES_DB: ${POSTGRES_DB_DW:-postgres}
    ports:
      - 5401:5432
    volumes:
      - ${DB_VOLUME_DW}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./mnt/minio:/data
    environment:
      MINIO_ROOT_USER: lappis
      MINIO_ROOT_PASSWORD: lappisrocks
    command: server --console-address ":9001" /data

  jupyter:
    <<: *airflow-common
    command: bash -c "jupyter lab --port=8888 --no-browser --ip=0.0.0.0 --notebook-dir=/opt/airflow/notebooks --ServerApp.token=''"
    volumes:
      - ./mnt/notebooks:/opt/airflow/notebooks
    ports:
      - 8888:8888
